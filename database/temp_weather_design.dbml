// Metadata Tables

Table SensorInformation {
  SensorID varchar(20) [pk, note: 'Unique sensor identifier (e.g., TEMPS-02-1)']
  SensorType varchar(20) [not null, note: 'TEMPERATURE, STRAIN, PRESSURE, MOISTURE, WEATHER']
  ModelNumber varchar(50) [note: 'Manufacturer model number']
  Orientation varchar(20) [note: 'LONGITUDINAL, TRANSVERSE, VERTICAL, N/A']
  WheelPath varchar(10) [note: 'RIGHT, LEFT, N/A']
  Depth decimal(6,1) [not null, note: 'Depth from pavement surface in mm']
  LayerType varchar(20) [not null, note: 'ASPHALT, BASE, SUBBASE, SUBGRADE, AIR, N/A']
  XCoordinate decimal(9,3) [note: 'Position coordinate (if available)']
  YCoordinate decimal(9,3) [note: 'Position coordinate (if available)']
  ZCoordinate decimal(9,3) [note: 'Position coordinate (if available)']
  InstallationDate timestamp [note: 'When the sensor was installed']
  CalibrationFormula text [note: 'Formula used for calibration (e.g., y=0.7484x-0.7417)']
  MeasurementUnit varchar(10) [not null, note: 'C, mV, MPa, µε, etc.']
  MinValue decimal(9,3) [note: 'Minimum measurable value']
  MaxValue decimal(9,3) [note: 'Maximum measurable value']
  Accuracy decimal(9,3) [note: 'Sensor accuracy']
  Description text [note: 'Additional details about the sensor']
  IsActive boolean [default: true, note: 'Whether the sensor is currently active']
  CreatedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When the record was created']
  UpdatedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When the record was last updated']
}

Table ProjectInformation {
  ProjectID varchar(20) [pk, note: 'Project identifier']
  ProjectName varchar(100) [not null, note: 'Name of the project']
  Location varchar(100) [note: 'Geographic location description']
  Latitude decimal(9,6) [note: 'GPS coordinates']
  Longitude decimal(9,6) [note: 'GPS coordinates'] 
  PavementAge decimal(5,2) [note: 'Age in years']
  ConstructionDate timestamp [note: 'When the pavement was constructed']
  PavementType varchar(50) [note: 'Type of pavement structure']
  ClimateRegion varchar(50) [note: 'Climate classification']
  AnnualFreezingIndex decimal(9,2) [note: 'Freezing index value']
  AnnualPrecipitation decimal(9,2) [note: 'In mm']
  AnnualAverageTemperature decimal(5,2) [note: 'In degrees Celsius']
  AADT int [note: 'Annual Average Daily Traffic']
  AADTT int [note: 'Annual Average Daily Truck Traffic']
  Description text [note: 'Project description']
  ContactInformation text [note: 'Contact details']
  CreatedAt timestamp [default: 'CURRENT_TIMESTAMP']
  UpdatedAt timestamp [default: 'CURRENT_TIMESTAMP']
}

// Raw Time Series Data Tables

Table RawTemperatureData {
  ReadingID bigint [pk, increment, note: 'Unique identifier for the reading']
  Timestamp timestamp [not null, note: 'When the reading was taken']
  SensorID varchar(20) [not null, note: 'Reference to the temperature sensor']
  TemperatureValue decimal(5,2) [not null, note: 'Temperature in degrees Celsius']

  indexes {
    Timestamp [name: 'idx_temp_timestamp']
    (SensorID, Timestamp) [name: 'idx_temp_sensor_time']
  }
}

Table RawWeatherStationData {
  ReadingID bigint [pk, increment, note: 'Unique identifier for the weather reading']
  Timestamp timestamp [not null, note: 'When the reading was taken']
  Temperature decimal(5,2) [note: 'Air temperature in degrees Celsius']
  DewPoint decimal(5,2) [note: 'Dew point in degrees Celsius']
  RelativeHumidity decimal(5,2) [note: 'Percentage']
  PressureStation decimal(6,2) [note: 'Station pressure in kPa']
  PressureSea decimal(6,2) [note: 'Sea level pressure in kPa']
  WindDirection varchar(10) [note: 'Wind direction (e.g., N, NE, E, SE, S, SW, W, NW)']
  WindDirectionDegrees int [note: 'Wind direction in degrees']
  WindSpeed decimal(5,2) [note: 'In km/h']
  WindGust decimal(5,2) [note: 'Maximum wind gust in km/h']
  Windchill decimal(5,2) [note: 'Windchill in degrees Celsius']
  Humidex decimal(5,2) [note: 'Humidex value']
  Visibility decimal(7,2) [note: 'Visibility in meters']
  HealthIndex decimal(5,2) [note: 'Health index value if available']
  CloudCover decimal(5,2) [note: 'Cloud cover percentage']
  SolarRadiation decimal(7,2) [note: 'In W/m²']
  MaxTempPastHour decimal(5,2) [note: 'Maximum temperature in past hour']
  MinTempPastHour decimal(5,2) [note: 'Minimum temperature in past hour']
  DataSource varchar(50) [note: 'Source of weather data (station name/ID)']
  RecordedAt timestamp [default: 'CURRENT_TIMESTAMP']

  indexes {
    Timestamp [name: 'idx_raw_weather_timestamp']
  }
}

Table StrainData {
  ReadingID bigint [pk, increment, note: 'Unique identifier for the reading']
  Timestamp timestamp [not null, note: 'When the reading was taken']
  SensorID varchar(20) [not null, note: 'Reference to the strain sensor']
  StrainValue decimal(9,3) [not null, note: 'In microstrain (µε)']

  indexes {
    Timestamp [name: 'idx_strain_timestamp']
    (SensorID, Timestamp) [name: 'idx_strain_sensor_time']
  }
}

Table PressureData {
  ReadingID bigint [pk, increment, note: 'Unique identifier for the reading']
  Timestamp timestamp [not null, note: 'When the reading was taken']
  SensorID varchar(20) [not null, note: 'Reference to the pressure sensor']
  PressureValue decimal(9,3) [not null, note: 'In MPa']

  indexes {
    Timestamp [name: 'idx_pressure_timestamp']
    (SensorID, Timestamp) [name: 'idx_pressure_sensor_time']
  }
}

Table MoistureData {
  ReadingID bigint [pk, increment, note: 'Unique identifier for the reading']
  Timestamp timestamp [not null, note: 'When the reading was taken']
  SensorID varchar(20) [not null, note: 'Reference to the moisture sensor']
  MoistureValue decimal(9,3) [not null, note: 'Volumetric water content (m³/m³)']
  RawValue decimal(9,3) [note: 'Raw reading in mV']

  indexes {
    Timestamp [name: 'idx_moisture_timestamp']
    (SensorID, Timestamp) [name: 'idx_moisture_sensor_time']
  }
}

// Aggregated Time Series Data Tables

// Temperature Sensor Aggregations (from pavement instrumentation)

Table TempData15Min {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  Timestamp timestamp [not null, note: 'Start of 15-minute interval']
  SensorID varchar(20) [not null, note: 'Reference to the temperature sensor']
  MeanValue decimal(5,2) [not null, note: 'Average temperature in interval']
  MinValue decimal(5,2) [not null, note: 'Minimum temperature in interval']
  MaxValue decimal(5,2) [not null, note: 'Maximum temperature in interval']
  StdDevValue decimal(5,2) [not null, note: 'Standard deviation of temperatures in interval']
  ReadingCount integer [not null, note: 'Number of readings in interval']
  IntervalEnd timestamp [not null, note: 'End of 15-minute interval']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    Timestamp [name: 'idx_temp15min_timestamp']
    (SensorID, Timestamp) [name: 'idx_temp15min_sensor_time']
    (Timestamp, SensorID) [unique, name: 'uq_temp15min_time_sensor']
  }
}

Table TempDataHourly {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  Timestamp timestamp [not null, note: 'Start of hourly interval']
  SensorID varchar(20) [not null, note: 'Reference to the temperature sensor']
  MeanValue decimal(5,2) [not null, note: 'Average temperature in interval']
  MinValue decimal(5,2) [not null, note: 'Minimum temperature in interval']
  MaxValue decimal(5,2) [not null, note: 'Maximum temperature in interval']
  StdDevValue decimal(5,2) [not null, note: 'Standard deviation of temperatures in interval']
  ReadingCount integer [not null, note: 'Number of readings in interval']
  IntervalEnd timestamp [not null, note: 'End of hourly interval']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    Timestamp [name: 'idx_temphourly_timestamp']
    (SensorID, Timestamp) [name: 'idx_temphourly_sensor_time']
    (Timestamp, SensorID) [unique, name: 'uq_temphourly_time_sensor']
  }
}

Table TempDataDaily {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  Timestamp timestamp [not null, note: 'Start of day (midnight)']
  SensorID varchar(20) [not null, note: 'Reference to the temperature sensor']
  MeanValue decimal(5,2) [not null, note: 'Daily average temperature']
  MinValue decimal(5,2) [not null, note: 'Daily minimum temperature']
  MaxValue decimal(5,2) [not null, note: 'Daily maximum temperature']
  StdDevValue decimal(5,2) [not null, note: 'Standard deviation of temperatures in day']
  TempRange decimal(5,2) [not null, note: 'Max - Min temperature for the day']
  ReadingCount integer [not null, note: 'Number of readings in day']
  MinTimestamp timestamp [note: 'Time of day when min temp occurred']
  MaxTimestamp timestamp [note: 'Time of day when max temp occurred']
  DayNightDelta decimal(5,2) [note: 'Difference between day and night temps']
  IntervalEnd timestamp [not null, note: 'End of day']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    Timestamp [name: 'idx_tempdaily_timestamp']
    (SensorID, Timestamp) [name: 'idx_tempdaily_sensor_time']
    (Timestamp, SensorID) [unique, name: 'uq_tempdaily_time_sensor']
  }
}

Table TempDataWeekly {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  Timestamp timestamp [not null, note: 'Start of week (Monday)']
  SensorID varchar(20) [not null, note: 'Reference to the temperature sensor']
  MeanValue decimal(5,2) [not null, note: 'Weekly average temperature']
  MinValue decimal(5,2) [not null, note: 'Weekly minimum temperature']
  MaxValue decimal(5,2) [not null, note: 'Weekly maximum temperature']
  StdDevValue decimal(5,2) [not null, note: 'Standard deviation of temperatures in week']
  TempRange decimal(5,2) [not null, note: 'Max - Min temperature for the week']
  ReadingCount integer [not null, note: 'Number of readings in week']
  LayerType varchar(20) [not null, note: 'Layer where sensor is located']
  Depth decimal(6,1) [not null, note: 'Depth of sensor from surface in mm']
  MinTimestamp timestamp [note: 'Time during week when min temp occurred']
  MaxTimestamp timestamp [note: 'Time during week when max temp occurred']
  WeekdayAvgTemp decimal(5,2) [note: 'Average temperature on weekdays']
  WeekendAvgTemp decimal(5,2) [note: 'Average temperature on weekends']
  IntervalEnd timestamp [not null, note: 'End of week (Sunday)']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    Timestamp [name: 'idx_tempweekly_timestamp']
    (SensorID, Timestamp) [name: 'idx_tempweekly_sensor_time']
    (Timestamp, SensorID) [unique, name: 'uq_tempweekly_time_sensor']
  }
}

// Weather Station Data Aggregations (from external weather stations)

Table WeatherData15Min {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  Timestamp timestamp [not null, note: 'Start of 15-minute interval']
  MetricName varchar(30) [not null, note: 'Type of weather measurement (temperature, humidity, etc.)']
  MeanValue decimal(9,2) [not null, note: 'Average value in interval']
  MinValue decimal(9,2) [not null, note: 'Minimum value in interval']
  MaxValue decimal(9,2) [not null, note: 'Maximum value in interval']
  StdDevValue decimal(9,2) [not null, note: 'Standard deviation in interval']
  ReadingCount integer [not null, note: 'Number of readings in interval']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    Timestamp [name: 'idx_weather15min_timestamp']
    (MetricName, Timestamp) [name: 'idx_weather15min_metric_time']
    (Timestamp, MetricName) [unique, name: 'uq_weather15min_time_metric']
  }
}

Table WeatherDataHourly {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  Timestamp timestamp [not null, note: 'Start of hourly interval']
  MetricName varchar(30) [not null, note: 'Type of weather measurement (temperature, humidity, etc.)']
  MeanValue decimal(9,2) [not null, note: 'Average value in interval']
  MinValue decimal(9,2) [not null, note: 'Minimum value in interval']
  MaxValue decimal(9,2) [not null, note: 'Maximum value in interval']
  StdDevValue decimal(9,2) [not null, note: 'Standard deviation in interval']
  ReadingCount integer [not null, note: 'Number of readings in interval']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    Timestamp [name: 'idx_weatherhourly_timestamp']
    (MetricName, Timestamp) [name: 'idx_weatherhourly_metric_time']
    (Timestamp, MetricName) [unique, name: 'uq_weatherhourly_time_metric']
  }
}

Table WeatherDataDaily {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  Date date [not null, note: 'Date of the daily aggregate']
  MetricName varchar(30) [not null, note: 'Type of weather measurement (temperature, humidity, etc.)']
  MeanValue decimal(9,2) [not null, note: 'Daily average value']
  MinValue decimal(9,2) [not null, note: 'Daily minimum value']
  MaxValue decimal(9,2) [not null, note: 'Daily maximum value']
  StdDevValue decimal(9,2) [not null, note: 'Standard deviation for the day']
  ValueRange decimal(9,2) [not null, note: 'Max - Min value for the day']
  ReadingCount integer [not null, note: 'Number of readings in day']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    Date [name: 'idx_weatherdaily_date']
    (MetricName, Date) [name: 'idx_weatherdaily_metric_date']
    (Date, MetricName) [unique, name: 'uq_weatherdaily_date_metric']
  }
}

Table WeatherDataWeekly {
  AggregateID bigint [pk, increment, note: 'Unique identifier for the aggregate record']
  WeekStart date [not null, note: 'Start date of the week (Monday)']
  WeekEnd date [not null, note: 'End date of the week (Sunday)']
  MetricName varchar(30) [not null, note: 'Type of weather measurement (temperature, humidity, etc.)']
  MeanValue decimal(9,2) [not null, note: 'Weekly average value']
  MinValue decimal(9,2) [not null, note: 'Weekly minimum value']
  MaxValue decimal(9,2) [not null, note: 'Weekly maximum value']
  StdDevValue decimal(9,2) [not null, note: 'Standard deviation for the week']
  ValueRange decimal(9,2) [not null, note: 'Max - Min value for the week']
  ReadingCount integer [not null, note: 'Number of readings in week']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When aggregation was performed']

  indexes {
    WeekStart [name: 'idx_weatherweekly_weekstart']
    (MetricName, WeekStart) [name: 'idx_weatherweekly_metric_week']
    (WeekStart, MetricName) [unique, name: 'uq_weatherweekly_week_metric']
  }
}

// System Tables

Table SensorHealthMonitoring {
  HealthID bigint [pk, increment, note: 'Unique identifier for the health record']
  Timestamp timestamp [not null, note: 'Day of health check']
  SensorID varchar(20) [not null, note: 'Reference to the sensor']
  DataCaptureRate decimal(5,2) [note: 'Percentage of expected readings received']
  NoiseLevel decimal(5,2) [note: 'Measure of signal noise']
  AnomalyCount integer [note: 'Number of anomalous readings']
  BatteryLevel decimal(5,2) [note: 'If applicable']
  SignalStrength decimal(5,2) [note: 'If applicable']
  FailureFlags integer [note: 'Bit flags for various failure modes']
  HealthStatus varchar(20) [note: 'GOOD, WARNING, CRITICAL, OFFLINE']
  Notes text [note: 'Additional details about sensor health']
  ProcessedAt timestamp [default: 'CURRENT_TIMESTAMP', note: 'When health check was performed']

  indexes {
    Timestamp [name: 'idx_sensorhealth_timestamp']
    (SensorID, Timestamp) [name: 'idx_sensorhealth_sensor_time']
    HealthStatus [name: 'idx_sensorhealth_status']
    (Timestamp, SensorID) [unique, name: 'uq_sensorhealth_time_sensor']
  }
}

// Relationships

Ref: RawTemperatureData.SensorID > SensorInformation.SensorID
Ref: StrainData.SensorID > SensorInformation.SensorID
Ref: PressureData.SensorID > SensorInformation.SensorID
Ref: MoistureData.SensorID > SensorInformation.SensorID

Ref: TempData15Min.SensorID > SensorInformation.SensorID
Ref: TempDataHourly.SensorID > SensorInformation.SensorID
Ref: TempDataDaily.SensorID > SensorInformation.SensorID
Ref: TempDataWeekly.SensorID > SensorInformation.SensorID

Ref: SensorHealthMonitoring.SensorID > SensorInformation.SensorID